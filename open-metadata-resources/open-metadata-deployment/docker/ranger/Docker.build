# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project

FROM ubuntu:18.10 AS build

# Install Git, which is missing from the Ubuntu base images.
RUN apt-get update && apt-get install -y git python openjdk-8-jdk maven wget inetutils-ping dnsutils gzip tar
RUN apt-get update && apt-get install -y git python openjdk-8-jdk maven wget libpostgresql-jdbc-java iputils-ping net-tools vim lsof apt-utils build-essential lsb-core lsb-release

ARG version=1.2.0
ARG solr_version=7.7.2

ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64
ENV MAVEN_HOME /usr/share/maven
ENV PATH /usr/java/bin:/usr/local/apache-maven/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# Working directory
WORKDIR /root

# Download ranger from dist
RUN wget https://www.apache.org/dist/ranger/$version/apache-ranger-$version.tar.gz

# Remove -DskipTests if unit tests are to be included - build the code...
WORKDIR /root/ranger

# Copy settings file to mvn settings
COPY dist/settings.xml /root/.m2/settings.xml

# untar the package
RUN tar -zxf /root/*.tar.gz --strip 1 

# Run the mvn 
RUN mvn -Pall -DskipTests=true clean compile package install assembly:assembly

# We have now built the latest ranger from source - let's unpack and setup the admin server & UI
# After a build, the target directory looks like this - we need to chose the zips we're interested in deploying
# in this docker image
#
# antrun                                      ranger-2.2.0-migration-util.tar.gz
# archive-tmp                                 ranger-2.2.0-migration-util.zip
# maven-shared-archive-resources              ranger-2.2.0-ranger-tools.tar.gz
# ranger-2.2.0-admin.tar.gz          ranger-2.2.0-ranger-tools.zip
# ranger-2.2.0-admin.zip             ranger-2.2.0-solr-plugin.tar.gz
# ranger-2.2.0-atlas-plugin.tar.gz   ranger-2.2.0-solr-plugin.zip
# ranger-2.2.0-atlas-plugin.zip      ranger-2.2.0-sqoop-plugin.tar.gz
# ranger-2.2.0-hbase-plugin.tar.gz   ranger-2.2.0-sqoop-plugin.zip
# ranger-2.2.0-hbase-plugin.zip      ranger-2.2.0-src.tar.gz
# ranger-2.2.0-hdfs-plugin.tar.gz    ranger-2.2.0-src.zip
# ranger-2.2.0-hdfs-plugin.zip       ranger-2.2.0-storm-plugin.tar.gz
# ranger-2.2.0-hive-plugin.tar.gz    ranger-2.2.0-storm-plugin.zip
# ranger-2.2.0-hive-plugin.zip       ranger-2.2.0-tagsync.tar.gz
# ranger-2.2.0-kafka-plugin.tar.gz   ranger-2.2.0-tagsync.zip
# ranger-2.2.0-kafka-plugin.zip      ranger-2.2.0-usersync.tar.gz
# ranger-2.2.0-kms.tar.gz            ranger-2.2.0-usersync.zip
# ranger-2.2.0-kms.zip               ranger-2.2.0-yarn-plugin.tar.gz
# ranger-2.2.0-knox-plugin.tar.gz    ranger-2.2.0-yarn-plugin.zip
# ranger-2.2.0-knox-plugin.zip       rat.txt
# ranger-2.2.0-kylin-plugin.tar.gz   version
# ranger-2.2.0-kylin-plugin.zip

# Just going with the admin server here -- to include others, extract to a unique location and then copy path across
# to runtime image below
RUN mkdir -p /opt/ranger-admin
RUN tar xzf /root/ranger/target/ranger-*-admin.tar.gz --strip-components 1 -C /opt/ranger-admin

COPY dist/ranger-docker-start.sh /opt/ranger-admin/ranger-docker-start.sh
RUN chmod 755 /opt/ranger-admin/ranger-docker-start.sh

# Configure and install Solr locally
WORKDIR /opt/ranger-admin/contrib/solr_for_audit_setup
RUN sed -i 's|SOLR_INSTALL=false|SOLR_INSTALL=true|' install.properties
RUN sed -i "s|SOLR_DOWNLOAD_URL=|SOLR_DOWNLOAD_URL=http://www.mirrorservice.org/sites/ftp.apache.org/lucene/solr/$solr_version/solr-$solr_version.tgz|" install.properties
RUN ./setup.sh
RUN sed -i 's|^SOLR_JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"$|SOLR_JAVA_HOME="/usr/lib/jvm/java-1.8-openjdk"|g' /opt/solr/ranger_audit_server/scripts/solr.in.sh

WORKDIR /opt/ranger-admin
RUN sed -i "s|^DB_FLAVOR=MYSQL|DB_FLAVOR=POSTGRES|g" install.properties
RUN sed -i "s|^SQL_CONNECTOR_JAR=/usr/share/java/mysql-connector-java.jar|SQL_CONNECTOR_JAR=/usr/share/java/postgresql-jdbc.jar|g" install.properties
RUN sed -i "s|^audit_solr_urls=|audit_solr_urls=http://localhost:6083/solr/ranger_audits|g" install.properties
