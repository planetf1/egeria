# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "myapp.fullname" . }}-job-01-data-loader
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/name: {{ include "myapp.name" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "myapp.name" . }}
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: samples-volume
          emptyDir: {}
      initContainers:
        - name: init-git
          image: "{{ .Values.image.configure.repository }}:{{ .Values.image.configure.tag }}"
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /samples &&
                git init egeria &&
                cd egeria &&
                git remote add origin https://github.com/cmgrote/egeria.git &&
                git config core.sparsecheckout true &&
                echo 'open-metadata-resources/open-metadata-deployment/sample-data/*' >> .git/info/sparse-checkout &&
                git pull --depth=1 origin containers
          volumeMounts:
            - mountPath: /samples
              name: samples-volume
        - name: wait-for-db
          image: busybox
          command:
            - "sh"
            - "-c"
            - >
                until nslookup {{ include "myapp.fullname" . }}-postgresql-service; do
                echo waiting for {{ include "myapp.fullname" . }}-postgresql-service;
                sleep 2;
                done;
      containers:
        - name: db-clients
          image: "{{ .Values.image.configure.repository }}:{{ .Values.image.configure.tag }}"
          env:
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ include "myapp.fullname" . }}-configmap
                  key: POSTGRESQL_PASSWORD
            - name: PGHOST
              value: {{ include "myapp.fullname" . }}-postgresql-service
            - name: PGUSER
              value: postgres
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /samples/egeria/open-metadata-resources/open-metadata-deployment/sample-data/coco-pharmaceuticals/database/postgresql &&
                createdb --encoding=UTF8 COMPDIR &&
                createdb --encoding=UTF8 EMPLOYEE &&
                createdb --encoding=UTF8 EMPLSANL &&
                createdb --encoding=UTF8 LOCATION &&
                createdb --encoding=UTF8 PATIENT &&
                psql -f sdlCOMPDIR.sql &&
                psql -f sdlEMPLOYEE.sql &&
                psql -f sdlEMPLSANL.sql &&
                psql -f sdlLOCATION.sql &&
                psql -f sdlPATIENT.sql
          volumeMounts:
            - mountPath: /samples
              name: samples-volume
