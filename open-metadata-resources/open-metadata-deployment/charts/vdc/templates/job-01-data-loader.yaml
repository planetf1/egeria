# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
{{ if .Values.postgresql.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "myapp.fullname" . }}-job-01-data-loader
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/name: {{ include "myapp.name" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    {{ if .Values.istio.enabled -}}
    sidecar.istio.io/inject: "true"
    {{- end }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "myapp.name" . }}
    spec:
      restartPolicy: OnFailure
      volumes:
{{ if .Values.localRepo.use }}
        - name: egeria-volume
          hostPath:
            path: {{ .Values.localRepo.location }}
            type: Directory
{{ else }}
        - name: egeria-volume
          emptyDir: {}
{{ end }}
      initContainers:
{{ if (not .Values.localRepo.use) }}
        - name: init-git
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /egeria &&
                git init . &&
                git remote add origin https://github.com/odpi/egeria.git &&
                git config core.sparsecheckout true &&
                echo 'open-metadata-resources/open-metadata-deployment/sample-data/*' >> .git/info/sparse-checkout &&
                git pull --depth=1 origin master
          volumeMounts:
            - mountPath: /egeria
              name: egeria-volume
{{ end }}
        - name: wait-for-db
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          env:
            - name: SERVICE
              value: {{ include "myapp.fullname" . }}-postgresql-service
      containers:
        - name: db-clients
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          env:
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ include "myapp.fullname" . }}-configmap
                  key: POSTGRESQL_PASSWORD
            - name: PGHOST
              value: {{ include "myapp.fullname" . }}-postgresql-service
            - name: PGUSER
              value: postgres
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /egeria/open-metadata-resources/open-metadata-deployment/sample-data/coco-pharmaceuticals/database/postgresql &&
                createdb --encoding=UTF8 COMPDIR &&
                createdb --encoding=UTF8 EMPLOYEE &&
                createdb --encoding=UTF8 EMPLSANL &&
                createdb --encoding=UTF8 LOCATION &&
                createdb --encoding=UTF8 PATIENT &&
                psql -f sdlCOMPDIR.sql &&
                psql -f sdlEMPLOYEE.sql &&
                psql -f sdlEMPLSANL.sql &&
                psql -f sdlLOCATION.sql &&
                psql -f sdlPATIENT.sql
          volumeMounts:
            - mountPath: /egeria
              name: egeria-volume
              readOnly: true
{{ end }}
