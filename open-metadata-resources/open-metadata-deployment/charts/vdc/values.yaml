# SPDX-License-Identifier: Apache-2.0 
# Copyright Contributors to the Egeria project.

# Network configuration
# note that load balancer configuration tends to be cloud-specific
# So review the templates/loadbalancer* files for any
# required updates

service:
  #LoadBalancer is another option (not for IBM Cloud free cluster)
  type: LoadBalancer
  externalName:  default.svc.cluster.local
  loadbalancer:
    iptype: public
    publicip: 158.176.107.220
  cloud: IBMCloud
  ingress:
    externaldomain: egeriadev.eu-gb.containers.appdomain.cloud

# The following section defines all of the DOCKER images being used by this
# chart. Normally they should be left as is, but are exposed here in case the
# user wishes to extend.

# Images ending -init are typically containers that perform configuration,
# often in the same container as the component they are configuring

# Note that sometimes the same docker image is used for multiple purposes - for example
# Both the Egeria UI, and Egeria core use the same docker image -- for now

image:
  ranger:
    repository: planetf1/ranger-admin-egeriavdc
    tag: 0.2.1
    pullPolicy: IfNotPresent

  mariadb:
    repository: mariadb
    tag: latest
    pullPolicy: IfNotPresent

  egeria:
    repository: planetf1/egeria-egeriavdc
    tag: 0.1.7
    pullPolicy: IfNotPresent

  gaian:
    repository: planetf1/gaian-egeriavdc
    tag: 0.1.0
    pullPolicy: IfNotPresent

  atlas:
    repository: planetf1/atlas-1773-egeria
    tag: 0.1.9
    pullPolicy: IfNotPresent

  atlasinit:
    repository: planetf1/atlas-init-egeria
    tag: 0.1.6
    pullPolicy: IfNotPresent

  igcproxy:
    repository: planetf1/egeria-egeriavdc
    tag: 0.1.6
    pullPolicy: IfNotPresent

  kafkamonitor:
    repository: planetf1/kafka-monitor-egeriavdc
    tag: 0.1.6
    pullPolicy: IfNotPresent

  egeriainit:
    repository: planetf1/egeria-init-egeria
    tag: 0.1.2
    pullPolicy: IfNotPresent

  igcproxyinit:
    repository: planetf1/igcproxy-init-egeriavdc
    tag: 0.1.3
    pullPolicy: IfNotPresent

  postgresqlinit:
    repository: planetf1/postgresql-init-egeria
    tag: 0.1.10
    pullPolicy: IfNotPresent

  postgresql:
    repository: planetf1/postgresql-egeriavdc
    tag: 0.2.1
    pullPolicy: IfNotPresent

  ui:
    repository: planetf1/egeria-egeriavdc
    tag: 0.1.7
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""

postgres:
  password: passw0rd

# Egeria depends on kafka, but it is not exposed externally
# The sample also requires auto topic creation
kafka:
  external:
    enabled: false
    type: NodePort
  configurationOverrides:
    auto.create.topics.enable: true

# For the Confluent kafka chart there are many additional components
# that we don't need -- so they are removed here
cp-schema-registry:
  enabled: false
cp-kafka-rest:
  enabled: false
cp-kafka-connect:
  enabled: false
cp-ksql-server:
  enabled: false

