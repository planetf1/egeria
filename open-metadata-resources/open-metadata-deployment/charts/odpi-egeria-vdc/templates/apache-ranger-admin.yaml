# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
{{ if .Values.ranger.enabled }}
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: ranger-admin-service
  annotations:
    {{ if .Values.istio.enabled }}
    sidecar.istio.io/inject: "true"
    {{- end }}
  name: {{ include "myapp.fullname" . }}-ranger-service
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: "ranger-admin"
      port: 6080
      targetPort: 6080
      nodePort: {{ .Values.service.nodeport.ranger }}
    - name: "ranger-admin-ssl"
      port: 6182
      targetPort: 6182
      nodePort: {{ .Values.service.nodeport.rangersecure }}
    - name: "ranger-solr"
      port: 6083
      targetPort: 6083
    - name: "ranger-solr-ssl"
      port: 6183
      targetPort: 6183
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: ranger-admin-service
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: ranger-admin-service
  name: {{ include "myapp.fullname" . }}-rangeradmin
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: ranger-admin-service

  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: ranger-admin-service

    spec:
      initContainers:
        - name: wait-for-db
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          env:
            - name: SERVICE
              value: {{ include "myapp.fullname" . }}-postgresql-service
      containers:
        - name: {{ .Chart.Name }}-ranger
          image: "{{ if (.Values.image.ranger.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.ranger.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.ranger.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.ranger.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.ranger.name }}\
                  :{{ .Values.image.ranger.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.ranger.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          ports:
            - containerPort: 6080
            - containerPort: 6182
            - containerPort: 6083
            - containerPort: 6183
            - containerPort: 8886
          env:
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ include "myapp.fullname" . }}-configmap
                  key: POSTGRESQL_PASSWORD
            - name: RANGER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ include "myapp.fullname" . }}-configmap
                  key: RANGER_PASSWORD
            - name: PGHOST
              value: {{ include "myapp.fullname" . }}-postgresql-service
            - name: PGUSER
              value: postgres
          resources: {}
      restartPolicy: Always
status: {}
{{ end }}
