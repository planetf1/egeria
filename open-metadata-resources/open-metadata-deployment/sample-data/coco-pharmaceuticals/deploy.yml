---
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.

- name: setup Information Server vars
  hosts: all
  tasks:
    - import_role: name=IBM.infosvr tasks_from=setup_vars.yml
    - import_role: name=IBM.infosvr tasks_from=get_certificate.yml
      tags: ['always']

- name: load CocoPharmaceutical samples
  hosts:
    - ibm-information-server-engine
    - ibm-information-server-domain
    - egeria-samples-db-host
  any_errors_fatal: true
  vars_files:
    - defaults/main.yml
    - vars/users.yml
    - vars/databases.yml
  vars:
    rest_mappings:
      - { type: "host", property: "name", from: "ENG.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { type: "host_(engine)", property: "name", from: "ENG.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { type: "host", property: "name", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
      - { type: "host_(engine)", property: "name", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
      - { type: "data_file", property: "path", from: "/data/files/CocoPharma", to: "{{ egeria_samples_cocopharma_targets.files }}" }
    iaxml_mappings:
      - { type: "DataSource", attr: "host", from: "DB.INFOSVR.VAGRANT.IBM.COM", to: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
  tasks:
    - name: load sample data files
      include_tasks: data-files/load.yml
      when: ('ibm-information-server-engine' in group_names)

    - name: create sample databases
      include_tasks: "database/{{ egeria_samples_cocopharma_db_type }}/create-databases.yml"

    - name: load sample data to databases
      include_tasks: "database/{{ egeria_samples_cocopharma_db_type }}/load.yml"

    - name: transform relationships to appropriate database
      template:
        src: ibm-igc-metadata/{{ item }}
        dest: ibm-igc-metadata/{{ item }}_generated
      delegate_to: localhost
      with_items:
        - dbcol2term.json
        - ia.xml

    - import_role: name=IBM.infosvr-import-export
      vars:
        ingest:
          glossary:
            - from: "ibm-igc-metadata/bg.xml"
              merged_by: overwrite
          relationships:
            - from: "ibm-igc-metadata/dbcol2term.json_generated"
              using_mode: REPLACE_ALL
              with_options:
                transformed_by: "{{ rest_mappings }}"
            - from: "ibm-igc-metadata/dfcol2term.json"
              using_mode: REPLACE_ALL
              with_options:
                transformed_by: "{{ rest_mappings }}"
          infoanalyzer:
            - from: "ibm-igc-metadata/ia.xml_generated"
              into_project: CocoPharma
              with_options:
                transformed_by: "{{ iaxml_mappings }}"
        progress:
          - assets_of_type: category
            using_action: publish
            with_options:
              only_with_conditions:
                - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
                - { property: "name", operator: "=", value: "Coco Pharmaceuticals" }
              condition_join: OR
              with_comment: "Auto-publication by samples import process"
          - assets_of_type: term
            using_action: publish
            with_options:
              only_with_conditions:
                - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              with_comment: "Auto-publication by samples import process"
        validate:
          that:
            - number_of: category
              meeting_any_conditions:
                - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 4
            - number_of: term
              meeting_all_conditions:
                - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 51
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "COMPDIR" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
              is: 13
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "EMPLOYEE" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
              is: 11
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "EMPLSANL" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
              is: 22
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "LOCATION" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
              is: 9
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "PATIENT" }
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
              is: 8
            - number_of: database_column
              meeting_all_conditions:
                - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ groups['egeria-samples-db-host'][0] | upper }}" }
                - { property: "assigned_to_terms.parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 61
            - number_of: data_file_field
              meeting_all_conditions:
                - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
                - { property: "data_file_record.data_file.path", operator: "=", value: "{{ egeria_samples_cocopharma_targets.files }}" }
              is: 63
            - number_of: data_file_field
              meeting_all_conditions:
                - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
                - { property: "data_file_record.data_file.path", operator: "=", value: "{{ egeria_samples_cocopharma_targets.files }}" }
                - { property: "assigned_to_terms.parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
              is: 61

    - name: remove generated files
        file:
          path: "{{ item }}"
          state: absent
        delegate_to: localhost
        with_items:
          - cache/
          - ibm-igc-metadata/dbcol2term.json_generated
          - ibm-igc-metadata/ia.xml_generated

    - name: list groups
      shell: >
        {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
        -user {{ ibm_infosvr_users.isadmin }}
        -password {{ ibm_infosvr_upwds.isadmin }}
        -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
        -list GROUPS
      args:
        executable: /bin/bash
      when: egeria_samples_cocopharma_groups is defined and ('ibm-information-server-engine' in group_names)
      register: __cocopharma_existing_groups

    - name: add group creation to command-list
      lineinfile:
        path: /tmp/__cocopharma_users_command_list.x
        regexp: ^-add_group {{ item.id }}
        line: -add_group {{ item.id }}~{{ item.name }};
        state: present
        insertafter: EOF
        create: yes
      when: >
        __cocopharma_existing_groups is defined
        and __cocopharma_existing_groups.stdout.find(item.id) == -1
        and ('ibm-information-server-engine' in group_names)
      with_items: "{{ egeria_samples_cocopharma_groups }}"
      loop_control:
        label: "{{ item.id }}"

    - name: add group role assignment to command-list
      lineinfile:
        path: /tmp/__cocopharma_users_command_list.x
        regexp: ^-assign_group_roles {{ item.id }}
        line: -assign_group_roles {{ item.id }}${{ item.roles | join("~") }};
        state: present
        insertafter: EOF
        create: yes
      with_items: "{{ egeria_samples_cocopharma_groups }}"
      when: egeria_samples_cocopharma_groups is defined and ('ibm-information-server-engine' in group_names)
      loop_control:
        label: "{{ item.id }}"

    - name: list users
      shell: >
        {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
        -user {{ ibm_infosvr_users.isadmin }}
        -password {{ ibm_infosvr_upwds.isadmin }}
        -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
        -list USERS
      args:
        executable: /bin/bash
      when: egeria_samples_cocopharma_groups is defined and ('ibm-information-server-engine' in group_names)
      register: __cocopharma_existing_users

    - name: add users to command-list
      lineinfile:
        path: /tmp/__cocopharma_users_command_list.x
        regexp: ^-add_user {{ item.username }}
        line: -add_user {{ item.username }}~{{ item.password }}~{{ item.firstname }}~{{ item.lastname }}~{{ item.title }}~{{ item.jobtitle }}~~~~~~~~{{ item.email }};
        state: present
        insertafter: EOF
        create: yes
      with_items: "{{ egeria_samples_cocopharma_users }}"
      when: >
        __cocopharma_existing_users is defined
        and __cocopharma_existing_users.stdout.find(item.username) == -1
        and ('ibm-information-server-engine' in group_names)
      loop_control:
        label: "{{ item.username }}"

    - name: add group assignment to command-list
      lineinfile:
        path: /tmp/__cocopharma_users_command_list.x
        regexp: ^-add_users_group {{ item.username }}
        line: -add_users_group {{ item.username }}${{ item.groups | join("~") }};
        state: present
        insertafter: EOF
        create: yes
      with_items: "{{ egeria_samples_cocopharma_users }}"
      when: egeria_samples_cocopharma_users is defined and ('ibm-information-server-engine' in group_names)
      loop_control:
        label: "{{ item.username }}"

    - name: create groups and users
      shell: >
        {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
        -user {{ ibm_infosvr_users.isadmin }}
        -password {{ ibm_infosvr_upwds.isadmin }}
        -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
        -f /tmp/__cocopharma_users_command_list.x
      args:
        executable: /bin/bash
      when: ('ibm-information-server-engine' in group_names)

    - name: remove command-list
      file:
        path: /tmp/__cocopharma_users_command_list.x
        state: absent
      when: ('ibm-information-server-engine' in group_names)

    - name: get RIDs for users
      uri:
        url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}/ibm/iis/igc-rest/v1/search/"
        method: POST
        user: "{{ ibm_infosvr_users.isadmin }}"
        password: "{{ ibm_infosvr_upwds.isadmin }}"
        body: '{"properties":["principal_id"],"types":["user"],"pageSize":"1000"}'
        body_format: json
        validate_certs: no
        status_code: 200
        headers:
          Content-Type: "application/json"
      changed_when: False
      register: __cocopharma_existing_users_rids
      when: ('ibm-information-server-engine' in group_names)

    - name: add users as stewards
      uri:
        url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}/ibm/iis/igc-rest/v1/administration/stewards"
        method: POST
        user: "{{ ibm_infosvr_users.isadmin }}"
        password: "{{ ibm_infosvr_upwds.isadmin }}"
        body: >
          {"id":"{{ __cocopharma_existing_users_rids.json | json_query("items[?principal_id=='" + item.username + "']._id") | first }}"}
        body_format: json
        validate_certs: no
        status_code: 200
        headers:
          Content-Type: "application/json"
      with_items: "{{ egeria_samples_cocopharma_users }}"
      when: egeria_samples_cocopharma_users is defined and ('ibm-information-server-engine' in group_names)
      loop_control:
        label: "{{ item.username }}"

# TODO: following needs to be re-worked a bit to cater for multi-database deployment (and tables spread across dbs)
#- name: kick-off automatic discovery of sample data (v11.7+)
#  hosts:
#    - ibm-information-server-engine
#  any_errors_fatal: true
#  roles:
#    - IBM.infosvr-metadata-asset-manager
#  vars_files:
#    - vars/cocopharma.yml
#  vars:
#    discover_sources:
#      - dcn: CocoPharma_DB2
#        project: CocoPharma
#        target_host: "{{ groups['egeria-samples-db-host'][0] | upper }}"
#        steps:
#          - import
#          - columnAnalysis
#          - termAssignment
#          - dataQualityAnalysis
#          - publish
#        parameters:
#          rootAssets: schema[{{ egeria_samples_cocopharma_targets.db_name | upper }}|{{ ibm_infosvr_users.db2inst1 | upper }}]
#          Asset_description_already_exists: Replace_existing_description
#