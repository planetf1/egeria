---
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.

- name: setup Information Server variables
  import_role:
    name: IBM.infosvr
    tasks_from: setup_vars.yml

- name: setup Information Server certificate
  import_role:
    name: IBM.infosvr
    tasks_from: get_certificate.yml

- include_tasks: query-and-remove-type.yml
  vars:
    type: data_file_record
    conditions:
      - { property: "data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { property: "data_file.path", operator: "=", value: "{{ egeria_samples_cocopharma_targets.files }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: data_file
    conditions:
      - { property: "host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
      - { property: "path", operator: "=", value: "{{ egeria_samples_cocopharma_targets.files }}" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: database_table
    conditions:
      - { property: "database_schema.database.name", operator: "=", value: "{{ db_name | upper }}" }
      - { property: "database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
  with_items: "{{ egeria_samples_cocopharma_databases }}"
  loop_control:
    loop_var: db_name

- include_tasks: query-and-remove-type.yml
  vars:
    type: database_schema
    conditions:
      - { property: "database.name", operator: "=", value: "{{ db_name | upper }}" }
      - { property: "database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
  with_items: "{{ egeria_samples_cocopharma_databases }}"
  loop_control:
    loop_var: db_name

- include_tasks: query-and-remove-type.yml
  vars:
    type: database
    conditions:
      - { property: "name", operator: "=", value: "{{ db_name | upper }}" }
      - { property: "host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
  with_items: "{{ egeria_samples_cocopharma_databases }}"
  loop_control:
    loop_var: db_name

- include_tasks: query-and-remove-type.yml
  vars:
    type: information_governance_policy
    conditions:
      - { property: "parent_policy.name", operator: "=", value: "Data Access Policies" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: information_governance_policy
    conditions:
      - { property: "name", operator: "=", value: "Data Access Policies" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: term
    conditions:
      - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: category
    conditions:
      - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }

- include_tasks: query-and-remove-type.yml
  vars:
    type: category
    conditions:
      - { property: "name", operator: "=", value: "Coco Pharmaceuticals" }

- name: list Information Analyzer projects
  uri:
    url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports.console }}\
            /ibm/iis/ia/api/projects"
    method: GET
    user: "{{ ibm_infosvr_user_isadmin }}"
    password: "{{ ibm_infosvr_upwd_isadmin }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: no
    timeout: 10
    return_content: yes
  register: __egeria_samples_ia_projects
  when: ('ibm-information-server-domain' in group_names)

- name: remove Information Analyzer project
  uri:
    url: "https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports.console }}\
            /ibm/iis/ia/api/project?projectName=CocoPharma"
    method: DELETE
    user: "{{ ibm_infosvr_user_isadmin }}"
    password: "{{ ibm_infosvr_upwd_isadmin }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: no
    timeout: 10
  when: >
    __egeria_samples_ia_projects.content.find('CocoPharma') != -1
    and ('ibm-information-server-domain' in group_names)

- import_role: name=IBM.infosvr-import-export
  vars:
    progress:
      - assets_of_type: category
        using_action: publish
        with_options:
          only_with_conditions:
            - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
            - { property: "name", operator: "=", value: "Coco Pharmaceuticals" }
          condition_join: OR
          with_comment: "Auto-publication by samples import process"
      - assets_of_type: term
        using_action: publish
        with_options:
          only_with_conditions:
            - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
          with_comment: "Auto-publication by samples import process"
    validate:
      that:
        - number_of: category
          meeting_any_conditions:
            - { property: "parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
          is: 0
        - number_of: term
          meeting_all_conditions:
            - { property: "parent_category.parent_category.name", operator: "=", value: "Coco Pharmaceuticals" }
          is: 0
        - number_of: database_column
          meeting_all_conditions:
            - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "COMPDIR" }
            - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
          is: 0
        - number_of: database_column
          meeting_all_conditions:
            - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "EMPLOYEE" }
            - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
          is: 0
        - number_of: database_column
          meeting_all_conditions:
            - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "EMPLSANL" }
            - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
          is: 0
        - number_of: database_column
          meeting_all_conditions:
            - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "LOCATION" }
            - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
          is: 0
        - number_of: database_column
          meeting_all_conditions:
            - { property: "database_table_or_view.database_schema.database.name", operator: "=", value: "PATIENT" }
            - { property: "database_table_or_view.database_schema.database.host.name", operator: "=", value: "{{ egeria_samples_db_host_remote | upper }}" }
          is: 0
        - number_of: data_file_field
          meeting_all_conditions:
            - { property: "data_file_record.data_file.host.name", operator: "=", value: "{{ groups['ibm-information-server-engine'][0] | upper }}" }
            - { property: "data_file_record.data_file.path", operator: "=", value: "{{ egeria_samples_cocopharma_targets.files }}" }
          is: 0

- name: remove cached files
  file:
    path: cache/__ibm_infosvr_cert_root.crt
    state: absent
  delegate_to: localhost

- name: list users
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
    -user {{ ibm_infosvr_users.isadmin }}
    -password {{ ibm_infosvr_upwds.isadmin }}
    -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
    -list USERS
  args:
    executable: /bin/bash
  when: egeria_samples_cocopharma_groups is defined and ('ibm-information-server-engine' in group_names)
  register: __cocopharma_existing_users

- name: add users removal to command-list
  lineinfile:
    path: /tmp/__cocopharma_users_command_list.x
    regexp: ^-add_user {{ item.username }}
    line: -delete_user {{ item.username }};
    state: present
    insertafter: EOF
    create: yes
  with_items: "{{ egeria_samples_cocopharma_users }}"
  when: >
    __cocopharma_existing_users is defined
    and __cocopharma_existing_users.stdout.find(item.username) != -1
    and ('ibm-information-server-engine' in group_names)
  loop_control:
    label: "{{ item.username }}"

- name: list groups
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
    -user {{ ibm_infosvr_users.isadmin }}
    -password {{ ibm_infosvr_upwds.isadmin }}
    -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
    -list GROUPS
  args:
    executable: /bin/bash
  when: egeria_samples_cocopharma_groups is defined and ('ibm-information-server-engine' in group_names)
  register: __cocopharma_existing_groups

- name: add group removal to command-list
  lineinfile:
    path: /tmp/__cocopharma_users_command_list.x
    regexp: ^-add_group {{ item.id }}
    line: -delete_group {{ item.id }};
    state: present
    insertafter: EOF
    create: yes
  when: >
    __cocopharma_existing_groups is defined
    and __cocopharma_existing_groups.stdout.find(item.id) != -1
    and ('ibm-information-server-engine' in group_names)
  with_items: "{{ egeria_samples_cocopharma_groups }}"
  loop_control:
    label: "{{ item.id }}"

- name: remove groups and users
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/DirectoryCommand.sh
    -user {{ ibm_infosvr_users.isadmin }}
    -password {{ ibm_infosvr_upwds.isadmin }}
    -url https://{{ ibm_infosvr_hosts.domain }}:{{ ibm_infosvr_ports_ext.console }}
    -f /tmp/__cocopharma_users_command_list.x
    -force
  args:
    executable: /bin/bash
  when: ('ibm-information-server-engine' in group_names)

- name: remove command-list
  file:
    path: /tmp/__cocopharma_users_command_list.x
    state: absent
  when: ('ibm-information-server-engine' in group_names)

- name: list Metadata Asset Manager import areas
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/imam.sh
    -u {{ ibm_infosvr_users.isadmin }}
    -w {{ ibm_infosvr_upwds.isadmin }}
    -a list
    --type area
    -nof
  args:
    executable: /bin/bash
  when: ('ibm-information-server-engine' in group_names)
  register: __cocopharma_existing_import_areas

- name: remove Metadata Asset Manager file import area
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/imam.sh
    -u {{ ibm_infosvr_users.isadmin }}
    -w {{ ibm_infosvr_upwds.isadmin }}
    -n CocoPharma_SampleFiles
    -a delete
    --type area
  args:
    executable: /bin/bash
  when: >
    ('ibm-information-server-engine' in group_names)
    and __cocopharma_existing_import_areas.stdout.find('CocoPharma_SampleFiles') != -1

- name: remove Metadata Asset Manager database import areas
  shell: >
    {{ ibm_infosvr_locations.linux }}/ASBNode/bin/imam.sh
    -u {{ ibm_infosvr_users.isadmin }}
    -w {{ ibm_infosvr_upwds.isadmin }}
    -n CocoPharma_{{ item | upper }}
    -a delete
    --type area
  args:
    executable: /bin/bash
  when: >
    ('ibm-information-server-engine' in group_names)
    and __cocopharma_existing_import_areas.stdout.find(item) != -1
  with_items: "{{ egeria_samples_cocopharma_databases }}"

- name: remote database catalog status
  shell: "source ~/.bashrc && db2 list database directory"
  args:
    executable: /bin/bash
  become_user: "{{ ibm_infosvr_users.db2inst1 }}"
  become: yes
  ignore_errors: yes
  register: __cocopharma_db2catalog_completion
  changed_when: False
  when: >
    ('ibm-information-server-engine' in group_names)
    and (egeria_samples_cocopharma_db_type == 'ibm-db2')

- name: uncatalog databases
  shell: >
    source ~/.bashrc &&
    db2 uncatalog database {{ item | upper }}
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ egeria_samples_db_credentials.owner }}"
  when: >
    ('ibm-information-server-engine' in group_names)
    and (egeria_samples_cocopharma_db_type == 'ibm-db2')
    and __cocopharma_db2catalog_completion.stdout.find(item) > 0
  with_items: "{{ egeria_samples_cocopharma_databases }}"
