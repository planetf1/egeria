{
	"info": {
		"_postman_id": "a475fda0-6bdb-4b8d-8cda-7aac6cce1815",
		"name": "Egeria-CTS-RepositoryWorkbench",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Configure server type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7008e39f-c266-454f-8e83-a25a7abb8d8f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/cts/server-type?typeName=Conformance",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user}}",
						"servers",
						"cts",
						"server-type"
					],
					"query": [
						{
							"key": "typeName",
							"value": "Conformance"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Configure event bus",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7008e39f-c266-454f-8e83-a25a7abb8d8f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"producer\": {\n\t\t\"bootstrap.servers\":\"{{kafkaep}}\"\n\t},\n\t\"consumer\": {\n   \t\t\"bootstrap.servers\":\"{{kafkaep}}\"\n\t}\n}"
				},
				"url": {
					"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/cts/event-bus?connectorProvider=org.odpi.openmetadata.adapters.eventbus.topic.kafka.KafkaOpenMetadataTopicProvider&topicURLRoot=OMRSTopic",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user}}",
						"servers",
						"cts",
						"event-bus"
					],
					"query": [
						{
							"key": "connectorProvider",
							"value": "org.odpi.openmetadata.adapters.eventbus.topic.kafka.KafkaOpenMetadataTopicProvider"
						},
						{
							"key": "topicURLRoot",
							"value": "OMRSTopic"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cohort configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7008e39f-c266-454f-8e83-a25a7abb8d8f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/cts/cohorts/{{cohort}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user}}",
						"servers",
						"cts",
						"cohorts",
						"{{cohort}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Enable repository workbench",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"class\": \"RepositoryConformanceWorkbenchConfig\",\n\t\"tutRepositoryServerName\": \"{{server}}\",\n\t\"maxSearchResults\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/cts/conformance-suite-workbenches/repository-workbench/repositories",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user}}",
						"servers",
						"cts",
						"conformance-suite-workbenches",
						"repository-workbench",
						"repositories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd4e2e25-7bf9-4cbb-9da5-1955f579d834",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"CTS endpoint configured\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.omagserverConfig.repositoryServicesConfig.localRepositoryConfig.localRepositoryLocalConnection.qualifiedName).to.equal(\"Local connection to In-memory repository@cts\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/cts/configuration/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user}}",
						"servers",
						"cts",
						"configuration",
						""
					]
				},
				"description": "Query Current Configuration"
			},
			"response": []
		},
		{
			"name": "Start conformance test",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bdfce345-26b1-4f34-a5fb-511b245ef3d9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/cts/instance",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user}}",
						"servers",
						"cts",
						"instance"
					]
				},
				"description": "Query Current Configuration"
			},
			"response": []
		},
		{
			"name": "Get full report",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/servers/cts/open-metadata/conformance-suite/users/{{user}}/report",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"servers",
						"cts",
						"open-metadata",
						"conformance-suite",
						"users",
						"{{user}}",
						"report"
					]
				}
			},
			"response": []
		}
	]
}
