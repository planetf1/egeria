/* SPDX-License-Identifier: Apache-2.0 */
/* Copyright Contributors to the ODPi Egeria project. */

 // This is a generated file - do not edit - changes should be made to the templates amd/or generator to generate this file with changes.

package org.odpi.openmetadata.fvt.opentypes.classifications;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.odpi.openmetadata.fvt.opentypes.common.ClassificationBean;
import org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.Classification;
import org.odpi.openmetadata.repositoryservices.ffdc.exception.InvalidParameterException;

<$$$
import org.odpi.openmetadata.fvt.opentypes.classifications.<$$uClassification$$>.<$$uClassification$$>Mapper;
$$$>


/**
 * A factory to create new instances of classes of open metadata classifications by name. Return null if the classification is not known.
 */
public class ClassificationBeanFactory {
    private static final Logger log = LoggerFactory.getLogger( ClassificationBeanFactory.class);
    private static final String className =  ClassificationBeanFactory.class.getName();
    public static ClassificationBean getClassificationBean(String name, Classification omrsClassification) throws InvalidParameterException {
        <$$$
        if (name.equals("<$$uClassification$$>")) {
            return <$$uClassification$$>Mapper.mapOmrsToBean(omrsClassification);
        }
        $$$>
        return null;
    }
}
