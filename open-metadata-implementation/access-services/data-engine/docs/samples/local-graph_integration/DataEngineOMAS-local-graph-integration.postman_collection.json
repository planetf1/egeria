{
	"info": {
		"_postman_id": "9d06f0bf-f7c4-4d91-bbae-284de84ca31a",
		"name": "DataEengine OMAS - local graph integration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.1.event bus",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34d958cd-930e-4188-ab32-b07ea9c06664",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "User-Agent",
						"value": "frfx"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"consumer\": {\n\t\"bootstrap.servers\" : \"{{kafka-url}}\",\n\t\"key.deserializer\": \"org.apache.kafka.common.serialization.StringDeserializer\",\n\t\"value.deserializer\": \"org.apache.kafka.common.serialization.StringDeserializer\",\n\t\"kafka.omrs.topic.id\": \"OMRSTopic\"\n},\n\"producer\": {\n\t\"bootstrap.servers\" : \"{{kafka-url}}\",\n\t\"key.serializer\": \"org.apache.kafka.common.serialization.StringSerializer\",\n\t\"value.serializer\": \"org.apache.kafka.common.serialization.StringSerializer\",\n\t\"kafka.omrs.topic.id\" : \"OMRSTopic\"\n}\n}"
				},
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/event-bus?connectorProvider=org.odpi.openmetadata.adapters.eventbus.topic.kafka.KafkaOpenMetadataTopicProvider&topicURLRoot=OMRSTopic",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"event-bus"
					],
					"query": [
						{
							"key": "connectorProvider",
							"value": "org.odpi.openmetadata.adapters.eventbus.topic.kafka.KafkaOpenMetadataTopicProvider"
						},
						{
							"key": "topicURLRoot",
							"value": "OMRSTopic"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "0.2.set server url",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3768d0b-1e7a-49c5-ba40-9a0587b17098",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "User-Agent",
						"value": "frfx"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/server-url-root?url={{base-url}}",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"server-url-root"
					],
					"query": [
						{
							"key": "url",
							"value": "{{base-url}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "0.3.cohort",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2902433-40e0-4a74-a999-67452a342213",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozzzzz"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/cohorts/cohort1",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"cohorts",
						"cohort1"
					]
				}
			},
			"response": []
		},
		{
			"name": "0.4.access-services enabled",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eea1c191-4d1a-47d6-9558-0f647374a2f5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "User-Agent",
						"value": "frfx"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/access-services",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"access-services"
					]
				}
			},
			"response": []
		},
		{
			"name": "0.5.set local repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "031d3b93-7a8f-43ee-ac7b-2b333d133abf",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "User-Agent",
						"value": "frfx"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/local-repository/mode/local-graph-repository",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"local-repository",
						"mode",
						"local-graph-repository"
					]
				}
			},
			"response": []
		},
		{
			"name": "0.6.Start",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f01d02d1-0993-4589-bc0d-69fa7eb8306c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/instance",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"instance"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.1. Create Software Server Capability",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02dc063b-db68-4422-a290-779d4b2a161c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"dataEngine\": \n\t{\n\t\t\"qualifiedName\": \"{{data-engine-qualified-name}}\",\n    \t\"displayName\": \"Data Stage\",\n    \t\"description\": \"data stage desc\",\n    \t\"engineType\": \"DataEngine\",\n    \t\"engineVersion\": \"1\",\n    \t\"enginePatchLevel\": \"2\",\n    \t\"vendor\": \"ibm\",\n    \t\"version\": \"123\",\n    \t\"source\": \"blah\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/registration",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2.Get Software Server Capability by qualifiedName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a68add6c-c495-4f5c-bfc4-2ec65d760244",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/registration/:qualified-name",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"registration",
						":qualified-name"
					],
					"variable": [
						{
							"key": "qualified-name",
							"value": "{{data-engine-qualified-name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1.Create Schema Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f7f85ce1-a00c-48bd-876e-4c6d1a1c9ee8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"schema\": {\n    \"qualifiedName\": \"extern:fr:6c18e03b7e4f44089462e858538bd5d2\",\n    \"displayName\": \"EMPLOYEE\",\n    \"columns\": [\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=DEPT_test\",\n        \"displayName\": \"DEPT\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=EMPSTATUS_test\",\n        \"displayName\": \"EMPSTATUS\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=FNAME_test\",\n        \"displayName\": \"FNAME\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=LNAME_test\",\n        \"displayName\": \"LNAME\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=LOCCODE_test\",\n        \"displayName\": \"LOCCODE\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=LVL_test\",\n        \"displayName\": \"LVL\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=PNUM_test\",\n        \"displayName\": \"PNUM\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=ROLE_test\",\n        \"displayName\": \"ROLE\",\n        \"elementPosition\": 0\n      }\n    ]\n  },\n  \"externalSourceName\": \"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/schema-types/",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"schema-types",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2.Create Port Implementation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a424f64-3868-4511-a2a2-7a2efa28f77c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"portImplementation\": {\n    \"type\": \"OUTPUT_PORT\",\n    \"displayName\": \"CompDir_EmployeeCSV_output\",\n    \"qualifiedName\": \"{{port-impl-qualified-name}}\",\n    \"schema\": {\n      \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema\",\n      \"displayName\": \"DEPT\",\n      \"author\": \"tesgt\",\n      \"usage\": \"tesgt\",\n      \"columns\": [\n        {\n          \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema::newAttribute::DEPCODE\",\n          \"attributeName\": \"DEPCODE\",\n          \"displayName\": \"DEPCODE\",\n          \"cardinality\": \"none\",\n          \"position\": \"1\",\n          \"type\": \"STRING\"\n        },\n        {\n          \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema::newAttribute::EMPSTATUS\",\n          \"displayName\": \"EMPSTATUS\",\n          \"dataType\": \"INT64\",\n          \"defaultValue\": \"\",\n          \"position\": 4,\n          \"description\": null,\n          \"formula\": null\n        }\n      ]\n    }\n  },\n  \"externalSourceName\": \"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/port-implementations",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"port-implementations"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3.Create Port Alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "989f6223-a59f-4605-b995-6c1585e06e5e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.be.equal(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"portAlias\": {\n    \"displayName\": \"EMPSALARYANALYSIS\",\n    \"qualifiedName\": \"{{port-alias-qualified-name}}\",\n    \"delegatesTo\": \"{{port-impl-qualified-name}}\",\n    \"type\": \"OUTPUT_PORT\"\n  },\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/port-aliases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"port-aliases"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.4.Create Process - simple process",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "503061b9-ea1c-45d2-8733-73993b764318",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"1 total result\", function () {",
							"    pm.expect(jsonData.guids).to.have.lengthOf(1);",
							"});",
							"",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							"",
							"const processGuid = jsonData.guids[0];",
							"pm.environment.set(\"processGuid\", processGuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"processes\": [\n    {\n      \"qualifiedName\": \"{{simple-process-qualified-name}}\",\n      \"displayName\": \"CompDir_EmployeeCSV\",\n      \"name\": \"CompDir_EmployeeCSVNew\",\n      \"description\": \"csv desc\",\n      \"owner\": \"Administrator IIS\",\n      \"ownerType\": \"USER_ID\",\n      \"latestChange\": \"latest change done9\",\n      \"formula\": \"whateverformula3\",\n      \"portImplementations\": [\n        {\n          \"qualifiedName\": \"{{simple-port-impl-qualified-name}}\",\n          \"displayName\": \"Employee-Employeeup\",\n          \"type\": \"INPUT_PORT\",\n          \"schema\": {\n            \"qualifiedName\": \"{{simple-schema-type-qualified-name}}\",\n            \"displayName\": \"Employee-Employee\",\n            \"author\": \"tesgt\",\n            \"usage\": \"tesgt\",\n            \"encodingStandard\": \"encoding\",\n            \"versionNumber\": \"12\",\n            \"columns\": [\n              {\n                \"qualifiedName\": \"{{simple-column-1-qualified-name}}\",\n                \"displayName\": \"DEPT\",\n                \"defaultValue\": \"test\",\n                \"position\": \"4\",\n                \"defaultOvverride\": \"test\",\n                \"orderedValues\":\"false\",\n                \"allowsDuplicateValues\":\"true\",\n                \"minCardinality\":\"3\",\n                \"maxCardinality\":\"4\",\n                \"description\": \"EMPSTATUS: nullable int64\",\n                \"formula\": \"dfs\",\n                \"dataType\": \"INT64\"\n              },\n              {\n                \"qualifiedName\": \"{{simple-column-2-qualified-name}}\",\n                \"displayName\": \"EMPSTATUS\",\n                \"dataType\": \"INT64\",\n                \"defaultValue\": \"\",\n                \"position\": 4,\n                \"description\": null,\n                \"formula\": null\n              }\n            ]\n          }\n        }\n      ],\n      \"lineageMappings\": [\n        {\n          \"sourceAttribute\": \"{{simple-column-1-qualified-name}}\",\n          \"targetAttribute\": \"{{simple-column-2-qualified-name}}\"\n        }\n      ]\n    }\n  ],\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.5.Add LinegeMappings",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "534d47c0-95b1-44c9-a4b8-3011d7ba274c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"lineageMappings\": [\n        {\n            \"sourceAttribute\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=DEPT_test\",\n            \"targetAttribute\": \"{{simple-column-1-qualified-name}}\"\n        }\n    ],\n   \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/lineage-mappings",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"lineage-mappings"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.6.Add Ports to Process",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "035f46d9-b7ad-45a5-b8d3-05dae175bf31",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.be.equal(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"ports\":[\"{{port-impl-qualified-name}}\", \"{{port-alias-qualified-name}}\"],\n\t\"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes/:processGuid/ports",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes",
						":processGuid",
						"ports"
					],
					"variable": [
						{
							"key": "processGuid",
							"value": "{{processGuid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3.1.Update Schema Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f7f85ce1-a00c-48bd-876e-4c6d1a1c9ee8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"schema\": {\n    \"qualifiedName\": \"extern:fr:6c18e03b7e4f44089462e858538bd5d2\",\n    \"displayName\": \"EMPLOYEE-updated\",\n    \"columns\": [\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=DEPT_test\",\n        \"displayName\": \"DEPT_updated\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=EMPSTATUS_test_updated\",\n        \"displayName\": \"EMPSTATUS\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=FNAME_test\",\n        \"displayName\": \"FNAME\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=LNAME_test\",\n        \"displayName\": \"LNAME\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=LOCCODE_test\",\n        \"displayName\": \"LOCCODE\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=LVL_test\",\n        \"displayName\": \"LVL\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=PNUM_test\",\n        \"displayName\": \"PNUM\",\n        \"elementPosition\": 0\n      },\n      {\n        \"qualifiedName\": \"(host_(engine))=INFOSVR::(data_connection)=EMPLOYEE_extern:fr:16feb06d8fde48eca2851815b6de99dd::(database_schema)=public::(database_table)=EMPLOYEE::(database_column)=ROLE_test\",\n        \"displayName\": \"ROLE\",\n        \"elementPosition\": 0\n      }\n    ]\n  },\n  \"externalSourceName\": \"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/schema-types/",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"schema-types",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "3.2.Update Port Implementation - update properties",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a424f64-3868-4511-a2a2-7a2efa28f77c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"portImplementation\": {\n    \"type\": \"OUTPUT_PORT\",\n    \"displayName\": \"CompDir_EmployeeCSV_output_updated\",\n    \"qualifiedName\": \"{{port-impl-qualified-name}}\",\n    \"schema\": {\n      \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema\",\n      \"displayName\": \"DEPT\",\n      \"author\": \"tesgt\",\n      \"usage\": \"tesgt\",\n      \"columns\": [\n        {\n          \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema::newAttribute::DEPCODE\",\n          \"attributeName\": \"DEPCODE\",\n          \"displayName\": \"DEPCODE\",\n          \"cardinality\": \"none\",\n          \"position\": \"1\",\n          \"type\": \"STRING\"\n        },\n        {\n          \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema::newAttribute::EMPSTATUS\",\n          \"displayName\": \"EMPSTATUS\",\n          \"dataType\": \"INT64\",\n          \"defaultValue\": \"\",\n          \"position\": 4,\n          \"description\": null,\n          \"formula\": null\n        }\n      ]\n    }\n  },\n  \"externalSourceName\": \"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/port-implementations",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"port-implementations"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.3.Update Port Implementation - new schema type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a424f64-3868-4511-a2a2-7a2efa28f77c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"portImplementation\": {\n    \"type\": \"OUTPUT_PORT\",\n    \"displayName\": \"CompDir_EmployeeCSV_output_updated\",\n    \"qualifiedName\": \"{{port-impl-qualified-name}}\",\n    \"schema\": {\n      \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema-new\",\n      \"displayName\": \"DEPT\",\n      \"author\": \"tesgt\",\n      \"usage\": \"tesgt\",\n      \"columns\": [\n        {\n          \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema::newAttribute::DEPCODE-new\",\n          \"attributeName\": \"DEPCODE\",\n          \"displayName\": \"DEPCODE\",\n          \"cardinality\": \"none\",\n          \"position\": \"1\",\n          \"type\": \"STRING\"\n        },\n        {\n          \"qualifiedName\": \"XE::(database_schema)=HR::(database_table)=DEPT1::newComplexSchema::newAttribute::EMPSTATUS-new\",\n          \"displayName\": \"EMPSTATUS\",\n          \"dataType\": \"INT64\",\n          \"defaultValue\": \"\",\n          \"position\": 4,\n          \"description\": null,\n          \"formula\": null\n        }\n      ]\n    }\n  },\n  \"externalSourceName\": \"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/port-implementations",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"port-implementations"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.4.Update Port Alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "989f6223-a59f-4605-b995-6c1585e06e5e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.be.equal(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"portAlias\": {\n    \"displayName\": \"EMPSALARYANALYSIS\",\n    \"qualifiedName\": \"{{port-alias-qualified-name}}\",\n    \"delegatesTo\": \"{{port-impl-qualified-name}}\",\n    \"type\": \"OUTPUT_PORT\"\n  },\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/port-aliases",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"port-aliases"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.5.Update Process - simple process - properties",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "503061b9-ea1c-45d2-8733-73993b764318",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"1 total result\", function () {",
							"    pm.expect(jsonData.guids).to.have.lengthOf(1);",
							"});",
							"",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							"",
							"const processGuid = jsonData.guids[0];",
							"pm.environment.set(\"processGuid\", processGuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"processes\": [\n    {\n      \"qualifiedName\": \"{{simple-process-qualified-name}}\",\n      \"displayName\": \"CompDir_EmployeeCSV-upd\",\n      \"name\": \"CompDir_EmployeeCSVNew\",\n      \"description\": \"csv desc updated\",\n      \"owner\": \"Administrator IIS\",\n      \"ownerType\": \"USER_ID\",\n      \"latestChange\": \"latest change done9 updated\",\n      \"formula\": \"updated\",\n      \"portImplementations\": [\n        {\n          \"qualifiedName\": \"{{simple-port-impl-qualified-name}}\",\n          \"displayName\": \"Employee-Employeeup\",\n          \"type\": \"INPUT_PORT\",\n          \"schema\": {\n            \"qualifiedName\": \"{{simple-schema-type-qualified-name}}\",\n            \"displayName\": \"Employee-Employee\",\n            \"author\": \"tesgt\",\n            \"usage\": \"tesgt\",\n            \"encodingStandard\": \"encoding\",\n            \"versionNumber\": \"12\",\n            \"columns\": [\n              {\n                \"qualifiedName\": \"{{simple-column-1-qualified-name}}\",\n                \"displayName\": \"DEPT\",\n                \"defaultValue\": \"test-updated\",\n                \"position\": \"4\",\n                \"defaultOvverride\": \"test\",\n                \"orderedValues\":\"false\",\n                \"allowsDuplicateValues\":\"true\",\n                \"minCardinality\":\"3\",\n                \"maxCardinality\":\"4\",\n                \"description\": \"EMPSTATUS: nullable int64\",\n                \"formula\": \"dfs\",\n                \"dataType\": \"INT64\"\n              },\n              {\n                \"qualifiedName\": \"{{simple-column-2-qualified-name}}\",\n                \"displayName\": \"EMPSTATUS\",\n                \"dataType\": \"INT64\",\n                \"defaultValue\": \"\",\n                \"position\": 4,\n                \"description\": null,\n                \"formula\": null\n              }\n            ]\n          }\n        }\n      ],\n      \"lineageMappings\": [\n        {\n          \"sourceAttribute\": \"{{simple-column-1-qualified-name}}\",\n          \"targetAttribute\": \"{{simple-column-2-qualified-name}}\"\n        }\n      ]\n    }\n  ],\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.6.Update Process - simple process - replace port",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "503061b9-ea1c-45d2-8733-73993b764318",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"1 total result\", function () {",
							"    pm.expect(jsonData.guids).to.have.lengthOf(1);",
							"});",
							"",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							"",
							"const processGuid = jsonData.guids[0];",
							"pm.environment.set(\"processGuid\", processGuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"processes\": [\n    {\n      \"qualifiedName\": \"{{simple-process-qualified-name}}\",\n      \"displayName\": \"CompDir_EmployeeCSV\",\n      \"name\": \"CompDir_EmployeeCSVNew\",\n      \"description\": \"csv desc\",\n      \"owner\": \"Administrator IIS\",\n      \"ownerType\": \"USER_ID\",\n      \"latestChange\": \"latest change done9\",\n      \"formula\": \"whateverformula3\",\n      \"portImplementations\": [\n        {\n          \"qualifiedName\": \"{{simple-port-impl-qualified-name}}-new\",\n          \"displayName\": \"Employee-Employeeup\",\n          \"type\": \"INPUT_PORT\",\n          \"schema\": {\n            \"qualifiedName\": \"{{simple-schema-type-qualified-name}}-new\",\n            \"displayName\": \"Employee-Employee\",\n            \"author\": \"tesgt\",\n            \"usage\": \"tesgt\",\n            \"encodingStandard\": \"encoding\",\n            \"versionNumber\": \"12\",\n            \"columns\": [\n              {\n                \"qualifiedName\": \"{{simple-column-1-qualified-name}}-new\",\n                \"displayName\": \"DEPT\",\n                \"defaultValue\": \"test\",\n                \"position\": \"4\",\n                \"defaultOvverride\": \"test\",\n                \"orderedValues\":\"false\",\n                \"allowsDuplicateValues\":\"true\",\n                \"minCardinality\":\"3\",\n                \"maxCardinality\":\"4\",\n                \"description\": \"EMPSTATUS: nullable int64\",\n                \"formula\": \"dfs\",\n                \"dataType\": \"INT64\"\n              },\n              {\n                \"qualifiedName\": \"{{simple-column-2-qualified-name}}-new\",\n                \"displayName\": \"EMPSTATUS\",\n                \"dataType\": \"INT64\",\n                \"defaultValue\": \"\",\n                \"position\": 4,\n                \"description\": null,\n                \"formula\": null\n              }\n            ]\n          }\n        }\n      ],\n      \"lineageMappings\": [\n        {\n          \"sourceAttribute\": \"{{simple-column-1-qualified-name}}-new\",\n          \"targetAttribute\": \"{{simple-column-2-qualified-name}}-new\"\n        }\n      ]\n    }\n  ],\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.7.Update Process - simple process - replace schema",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "503061b9-ea1c-45d2-8733-73993b764318",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"1 total result\", function () {",
							"    pm.expect(jsonData.guids).to.have.lengthOf(1);",
							"});",
							"",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							"",
							"const processGuid = jsonData.guids[0];",
							"pm.environment.set(\"processGuid\", processGuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"processes\": [\n    {\n      \"qualifiedName\": \"{{simple-process-qualified-name}}\",\n      \"displayName\": \"CompDir_EmployeeCSV\",\n      \"name\": \"CompDir_EmployeeCSVNew\",\n      \"description\": \"csv desc\",\n      \"owner\": \"Administrator IIS\",\n      \"ownerType\": \"USER_ID\",\n      \"latestChange\": \"latest change done9\",\n      \"formula\": \"whateverformula3\",\n      \"portImplementations\": [\n        {\n          \"qualifiedName\": \"{{simple-port-impl-qualified-name}}-new\",\n          \"displayName\": \"Employee-Employeeup\",\n          \"type\": \"INPUT_PORT\",\n          \"schema\": {\n            \"qualifiedName\": \"{{simple-schema-type-qualified-name}}-new\",\n            \"displayName\": \"Employee-Employee\",\n            \"author\": \"tesgt\",\n            \"usage\": \"tesgt\",\n            \"encodingStandard\": \"encoding\",\n            \"versionNumber\": \"12\",\n            \"columns\": [\n              {\n                \"qualifiedName\": \"{{simple-column-1-qualified-name}}-new\",\n                \"displayName\": \"DEPT\",\n                \"defaultValue\": \"test\",\n                \"position\": \"4\",\n                \"defaultOvverride\": \"test\",\n                \"orderedValues\":\"false\",\n                \"allowsDuplicateValues\":\"true\",\n                \"minCardinality\":\"3\",\n                \"maxCardinality\":\"4\",\n                \"description\": \"EMPSTATUS: nullable int64\",\n                \"formula\": \"dfs\",\n                \"dataType\": \"INT64\"\n              },\n              {\n                \"qualifiedName\": \"{{simple-column-2-qualified-name}}-new\",\n                \"displayName\": \"EMPSTATUS\",\n                \"dataType\": \"INT64\",\n                \"defaultValue\": \"\",\n                \"position\": 4,\n                \"description\": null,\n                \"formula\": null\n              }\n            ]\n          }\n        }\n      ],\n      \"lineageMappings\": [\n        {\n          \"sourceAttribute\": \"{{simple-column-1-qualified-name}}-new\",\n          \"targetAttribute\": \"{{simple-column-2-qualified-name}}-new\"\n        }\n      ]\n    }\n  ],\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.8.Update Process - simple process - append port",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "503061b9-ea1c-45d2-8733-73993b764318",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"1 total result\", function () {",
							"    pm.expect(jsonData.guids).to.have.lengthOf(1);",
							"});",
							"",
							"pm.test(\"relatedHTTPCode code is 200\", function () {",
							"    pm.expect(jsonData.relatedHTTPCode).to.equal(200);",
							"});",
							"",
							"const processGuid = jsonData.guids[0];",
							"pm.environment.set(\"processGuid\", processGuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"processes\": [\n    {\n      \"qualifiedName\": \"{{simple-process-qualified-name}}\",\n      \"displayName\": \"CompDir_EmployeeCSV\",\n      \"name\": \"CompDir_EmployeeCSVNew\",\n      \"description\": \"csv desc\",\n      \"owner\": \"Administrator IIS\",\n      \"ownerType\": \"USER_ID\",\n      \"latestChange\": \"latest change done9\",\n      \"formula\": \"whateverformula3\",\n      \"portImplementations\": [\n        {\n          \"qualifiedName\": \"{{simple-port-impl-qualified-name}}-new-append\",\n          \"displayName\": \"Employee-Employeeup\",\n          \"type\": \"INPUT_PORT\",\n          \"schema\": {\n            \"qualifiedName\": \"{{simple-schema-type-qualified-name}}-new-append\",\n            \"displayName\": \"Employee-Employee\",\n            \"author\": \"tesgt\",\n            \"usage\": \"tesgt\",\n            \"encodingStandard\": \"encoding\",\n            \"versionNumber\": \"12\",\n            \"columns\": [\n              {\n                \"qualifiedName\": \"{{simple-column-1-qualified-name}}-new-append\",\n                \"displayName\": \"DEPT\",\n                \"defaultValue\": \"test\",\n                \"position\": \"4\",\n                \"defaultOvverride\": \"test\",\n                \"orderedValues\":\"false\",\n                \"allowsDuplicateValues\":\"true\",\n                \"minCardinality\":\"3\",\n                \"maxCardinality\":\"4\",\n                \"description\": \"EMPSTATUS: nullable int64\",\n                \"formula\": \"dfs\",\n                \"dataType\": \"INT64\"\n              },\n              {\n                \"qualifiedName\": \"{{simple-column-2-qualified-name}}-new-append\",\n                \"displayName\": \"EMPSTATUS\",\n                \"dataType\": \"INT64\",\n                \"defaultValue\": \"\",\n                \"position\": 4,\n                \"description\": null,\n                \"formula\": null\n              }\n            ]\n          }\n        }\n      ],\n      \"lineageMappings\": [\n        {\n          \"sourceAttribute\": \"{{simple-column-1-qualified-name}}-new-append\",\n          \"targetAttribute\": \"{{simple-column-2-qualified-name}}-new-append\"\n        }\n      ]\n    }\n  ],\n  \"updateSemantic\":\"APPEND\",\n  \"externalSourceName\":\"{{data-engine-qualified-name}}\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}