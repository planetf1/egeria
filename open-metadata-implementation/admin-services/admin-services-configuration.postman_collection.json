{
	"info": {
		"_postman_id": "c9818bed-da5d-4cb5-9bb6-a1f8ad50cc69",
		"name": "OMAG Server Configuration",
		"description": "Requests for configuring an OMAG Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Query Configuration",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/configuration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"configuration"
					]
				},
				"description": "Query Current Configuration"
			},
			"response": []
		},
		{
			"name": "Query Configuration Document Connection",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/stores/connection",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"stores",
						"connection"
					]
				},
				"description": "Query the Connection object used to create the connector to the configuration document.  If the result is null it means that the server is using the default connector that stores the configuration document as a file."
			},
			"response": []
		},
		{
			"name": "Query Server Origin",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/platform-services/users/garygeeke/server-platform-origin",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"platform-services",
						"users",
						"garygeeke",
						"server-platform-origin"
					]
				},
				"description": "Query the identifier of this server platform's origin.  This is useful where there are many different implementations of the open metadata repository servers."
			},
			"response": []
		},
		{
			"name": "Set configuration document connector",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n                    \"class\": \"Connection\",\n                    \"type\": {\n                        \"class\": \"ElementType\",\n                        \"elementTypeId\": \"114e9f8f-5ff3-4c32-bd37-a7eb42712253\",\n                        \"elementTypeName\": \"Connection\",\n                        \"elementTypeVersion\": 1,\n                        \"elementTypeDescription\": \"A set of properties to identify and configure a connector instance.\",\n                        \"elementOrigin\": \"CONFIGURATION\"\n                    },\n                    \"guid\": \"12137087-2b13-4c4e-b840-97c4282f7416\",\n                    \"qualifiedName\": \"InTopic\",\n                    \"displayName\": \"InTopic\",\n                    \"description\": \"InTopic\",\n                    \"connectorType\": {\n                        \"class\": \"ConnectorType\",\n                        \"type\": {\n                            \"class\": \"ElementType\",\n                            \"elementTypeId\": \"954421eb-33a6-462d-a8ca-b5709a1bd0d4\",\n                            \"elementTypeName\": \"ConnectorType\",\n                            \"elementTypeVersion\": 1,\n                            \"elementTypeDescription\": \"A set of properties describing a type of connector.\",\n                            \"elementOrigin\": \"LOCAL_COHORT\"\n                        },\n                        \"guid\": \"3851e8d0-e343-400c-82cb-3918fed81da6\",\n                        \"qualifiedName\": \"Kafka Open Metadata Topic Connector\",\n                        \"displayName\": \"Kafka Open Metadata Topic Connector\",\n                        \"description\": \"Kafka Open Metadata Topic Connector supports string based events over an Apache Kafka event bus.\",\n                        \"connectorProviderClassName\": \"org.odpi.openmetadata.adapters.eventbus.topic.kafka.KafkaOpenMetadataTopicProvider\"\n                    },\n                    \"endpoint\": {\n                        \"class\": \"Endpoint\",\n                        \"type\": {\n                            \"class\": \"ElementType\",\n                            \"elementTypeId\": \"dbc20663-d705-4ff0-8424-80c262c6b8e7\",\n                            \"elementTypeName\": \"Endpoint\",\n                            \"elementTypeVersion\": 1,\n                            \"elementTypeDescription\": \"Description of the network address and related information needed to call a software service.\",\n                            \"elementOrigin\": \"CONFIGURATION\"\n                        },\n                        \"guid\": \"b4ae2f8c-5f65-4ed7-8762-1ef2aa958db5\",\n                        \"qualifiedName\": \"open-metadata/ConfigTopic\",\n                        \"displayName\": \"open-metadata/ConfigTopic\",\n                        \"description\": \"ConfigTopic\",\n                        \"address\": \"open-metadata/admin-services/ConfigTopic\"\n                    }\n                }"
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/stores/connection",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"stores",
						"connection"
					]
				},
				"description": "This call is rarely needed.  It overrides the default connector that stores the configuration documents in a file.  The request body is a Connection object that is used to create and configure the connector."
			},
			"response": []
		},
		{
			"name": "Delete configuration document connection",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/stores/connection",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"stores",
						"connection"
					]
				},
				"description": "Disable the open metadata access services (this is the default)."
			},
			"response": []
		},
		{
			"name": "Set local server URL",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/server-url-root?url=https://cocoMDS1:8080",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"server-url-root"
					],
					"query": [
						{
							"key": "url",
							"value": "https://cocoMDS1:8080"
						}
					]
				},
				"description": "Update the URL root that other servers should use to make calls to this local server. The URL path for the individual request is appended to this URL root."
			},
			"response": []
		},
		{
			"name": "Set local server user Id",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/server-user-id?id=cocoMDS",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"server-user-id"
					],
					"query": [
						{
							"key": "id",
							"value": "cocoMDS"
						}
					]
				},
				"description": "Set up the user Id that this server should use on open metadata requests when it is processing events (and consequently there is no end user id to use)."
			},
			"response": []
		},
		{
			"name": "Set max page size",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/max-page-size?limit=500",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"max-page-size"
					],
					"query": [
						{
							"key": "limit",
							"value": "500"
						}
					]
				},
				"description": "Set up the maximum number of results that can be returned on an open metadata request."
			},
			"response": []
		},
		{
			"name": "Set local server type",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/server-type?typeName=OMAG Test Server",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"server-type"
					],
					"query": [
						{
							"key": "typeName",
							"value": "OMAG Test Server"
						}
					]
				},
				"description": "Set up a descriptive type name for your server."
			},
			"response": []
		},
		{
			"name": "Set organization name",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/organization-name?name=Coco Pharmaceuticals",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"organization-name"
					],
					"query": [
						{
							"key": "name",
							"value": "Coco Pharmaceuticals"
						}
					]
				},
				"description": "Set up the name of the organization that owns this server."
			},
			"response": []
		},
		{
			"name": "Set up event bus",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/event-bus",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"event-bus"
					]
				},
				"description": "Set up the common properties needed to call your event bus.  These properties are passed inthe request body."
			},
			"response": []
		},
		{
			"name": "Enable the access services",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/access-services",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"access-services"
					]
				},
				"description": "Turn on the open metadata access services (OMAS)"
			},
			"response": []
		},
		{
			"name": "Disable the access services",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/access-services",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"access-services"
					]
				},
				"description": "Disable the open metadata access services (this is the default)."
			},
			"response": []
		},
		{
			"name": "Enable the in-memory repository",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/local-repository/mode/in-memory-repository",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"local-repository",
						"mode",
						"in-memory-repository"
					]
				},
				"description": "Set up the local reposiotry to use the in-memory implementation."
			},
			"response": []
		},
		{
			"name": "Enable the dummy graph repository",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/local-repository/mode/local-graph-repository",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"local-repository",
						"mode",
						"local-graph-repository"
					]
				},
				"description": "Set the local reposiotry to use the graph implementation.  At this point it is a stub that will throw exceptions if called."
			},
			"response": []
		},
		{
			"name": "Set repository proxy's local repository connection",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/local-repository/mode/repository-proxy/details?connectorProvider=org.odpi.openmetadata.adapters.igc.repositoryconnector.IGCOMRSRepositoryConnectorProvider",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"local-repository",
						"mode",
						"repository-proxy",
						"details"
					],
					"query": [
						{
							"key": "connectorProvider",
							"value": "org.odpi.openmetadata.adapters.igc.repositoryconnector.IGCOMRSRepositoryConnectorProvider             "
						}
					]
				},
				"description": "Query Current Configuration"
			},
			"response": []
		},
		{
			"name": "Set repository event mapper",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/local-repository/event-mapper-details?connectorProvider=org.odpi.openmetadata.adapters.igc.eventmapper.IGCEventMapperProvider&eventSource=infosphereEvent",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"local-repository",
						"event-mapper-details"
					],
					"query": [
						{
							"key": "connectorProvider",
							"value": "org.odpi.openmetadata.adapters.igc.eventmapper.IGCEventMapperProvider"
						},
						{
							"key": "eventSource",
							"value": "infosphereEvent"
						}
					]
				},
				"description": "Set the event mapper for the local repository.  This translates proprietary events onto OMRS calls."
			},
			"response": []
		},
		{
			"name": "Remove local repository",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/local-repository",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"local-repository"
					]
				},
				"description": "Remove all configuration for the local repository."
			},
			"response": []
		},
		{
			"name": "Enable access to a cohort",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/cohorts/cohort1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"cohorts",
						"cohort1"
					]
				},
				"description": "Request registration to a cohort."
			},
			"response": []
		},
		{
			"name": "Disable access to a cohort",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/cohorts/cohort1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"cohorts",
						"cohort1"
					]
				},
				"description": "Unregister from a cohort."
			},
			"response": []
		},
		{
			"name": "Activate open metadata using config",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/instance",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"instance"
					]
				},
				"description": "Activate open metadata services"
			},
			"response": []
		},
		{
			"name": "Deactivate open metadata in server",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/instance",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1",
						"instance"
					]
				},
				"description": "Deactivate open metadata services"
			},
			"response": []
		},
		{
			"name": "Remove open metadata from server (including config)",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"garygeeke",
						"servers",
						"cocoMDS1"
					]
				},
				"description": "Unregister server and remove its configuration"
			},
			"response": []
		}
	]
}